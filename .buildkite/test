#!/usr/bin/env bash
set -euo pipefail

# automatically open the log output group if there's an error
trap 'echo "^^^ +++"' ERR

# install test requirements
# shellcheck disable=SC2086
echo "--- Installing requirements :redis: :postgres: :java: :chrome:"

rm /etc/apt/preferences

tee -a /etc/apt/preferences.d/chromium.pref <<EOF
Package: *
Pin: origin "deb.debian.org"
Pin-Priority: -10

Package: chromium* libvpx5 libjpeg62-turbo
Pin: origin "deb.debian.org"
Pin-Priority: 999
EOF

tee -a /etc/apt/sources.list.d/debian.list <<EOF
deb http://deb.debian.org/debian/ stable main #Debian stable
deb http://deb.debian.org/debian/ stable-updates main #Debian updates
deb http://deb.debian.org/debian-security stable/updates main #Debian security updates
EOF

apt install debian-archive-keyring && \
apt-key add /usr/share/keyrings/debian-archive-keyring.gpg
apt update
apt install chromium

install-packages \
    apparmor \
    git-core \
    postgresql \
    redis \
    openjdk-8-jre-headless \
    gcc \
    libc-dev

# configure JAVA_HOME
export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64"

# work around https://github.com/SergeyPirogov/webdriver_manager/issues/73
ln -s /usr/bin/chromium-browser /usr/bin/google-chrome

# Redis needs to be running
redis-server --daemonize yes

# this needs to be set on Google Cloud for unknown reasons
echo '127.0.0.1 localhost' >> /etc/hosts

# switch to virtual environment
cd /app

# shellcheck disable=SC1091
source bin/activate

# install testing dependencies
echo "--- Installing dependencies :python:"
cd /app/src
pip install '.[test]' \
    pytest-test-groups \
    --quiet

# reset the build assets again (like in the upstream container script),
# because pip install will undo that change
find ../lib -type d -iname assets -print0 | xargs -0 chmod a+w

# run the tests as a separate user
export LC_ALL="C.UTF-8"
export LANG="C.UTF-8"

adduser --disabled-password --gecos "" test

GROUP_COUNT="$BUILDKITE_PARALLEL_JOB_COUNT"
GROUP="$(( BUILDKITE_PARALLEL_JOB + 1 ))"
PROCESSES="$(($(grep -c ^processor /proc/cpuinfo) - 1))"

echo "--- Running tests :pytest: (group: $GROUP/$GROUP_COUNT, processes: $PROCESSES)"
set +x

if [[ "$PROCESSES" == "1" ]]; then
    xdist=""
else
    xdist="-n $PROCESSES"
fi

# shellcheck disable=SC2086
run-as "$(id -u test)":test py.test \
    -o cache_dir=/tmp/pytest \
    --test-group "$GROUP" \
    --test-group-count "$GROUP_COUNT" $xdist \
    tests
